apiVersion: v1
kind: ServiceAccount
metadata:
  name: client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
      version: v1
  template:
    metadata:
      labels:
        app: client
        version: v1
    spec:
      volumes:
        - name: proxyconfig
          configMap:
            name: proxyconfig
      serviceAccountName: client
      containers:
        - image: envoyproxy/envoy:v1.24.1
          name: proxy
          ports:
            - containerPort: 8080
            - containerPort: 8081
          volumeMounts:
            - mountPath: /etc/envoy
              name: proxyconfig
        - image: grpc-load-balancing/client:1
          name: client
          env:
            - name: SERVER_ADDRESS
              value: localhost:8080
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
---
kind: ConfigMap
metadata:
  name: proxyconfig
apiVersion: v1
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 8081 }
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address: { address: 0.0.0.0, port_value: 8080 }
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    codec_type: AUTO
                    access_log:
                      - name: envoy.access_loggers.file
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                          "path": /dev/stdout
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/" }
                              route: { cluster: server }
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: server
          type: STRICT_DNS
          connect_timeout: 0.25s
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          http2_protocol_options: {}
          load_assignment:
            cluster_name: server
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: server
                          port_value: 50051
